const DEFAULT_TODO_LIST='<li class="todo-list__item task"><p class="task__title">Выучить промисы</p><label class="task__label"><input class="task__input visually-hidden" type="checkbox"><span class="task__range"><span class="task__handler"></span></span></label></li><li class="todo-list__item task"><p class="task__title">Выучить async await</p><label class="task__label"><input class="task__input visually-hidden" type="checkbox"><span class="task__range"><span class="task__handler"></span></span></label></li><li class="todo-list__item task"><p class="task__title">Закрепить замыкания</p><label class="task-list__label"><input class="task__input visually-hidden" type="checkbox"><span class="task__range"><span class="task__handler"></span></span></label></li>',pageBody=document.querySelector(".body"),todoList=pageBody.querySelector(".todo-list__list"),newTaskForm=pageBody.querySelector(".todo-list__add-wrapper"),newTaskFieldset=newTaskForm.querySelector(".todo-list__fieldset"),newTaskInput=newTaskForm.querySelector(".todo-list__add-input"),newTaskAddButton=newTaskForm.querySelector(".todo-list__add-btn"),newTaskTemplate=pageBody.querySelector("#new-task").content.querySelector(".task"),themeSelect=pageBody.querySelector(".theme-input"),resetButton=pageBody.querySelector(".reset");let todoListContent=null;const addTask=()=>{const t=newTaskInput.value,e=newTaskTemplate.cloneNode(!0),s=e.querySelector(".task__title");if(""===t)return!1;s.textContent=t,todoList.appendChild(e),newTaskInput.value="",localStorage.setItem("todoList",todoList.innerHTML)},closeTaskInput=()=>{newTaskAddButton.classList.remove("todo-list__add-btn--add"),newTaskFieldset.classList.remove("todo-list__fieldset--shown")},onNewTaskAddButtonClick=t=>{t.preventDefault();newTaskFieldset.classList.contains("todo-list__fieldset--shown")?(addTask(),closeTaskInput()):(newTaskAddButton.classList.add("todo-list__add-btn--add"),newTaskFieldset.classList.add("todo-list__fieldset--shown"))},onNewTaskFormSubmit=t=>{t.preventDefault(),addTask(),closeTaskInput()},onTaskHandlerClick=t=>{const e=t.target.classList.contains("task__input"),s=t.target.closest(".task");if(!e)return!1;s.classList.add("task--hide"),s.classList.add("task--transition"),setTimeout(()=>{s.remove(),localStorage.setItem("todoList",todoList.innerHTML)},800)},setTransition=()=>{pageBody.classList.add("body--transition"),setTimeout(()=>{pageBody.classList.remove("body--transition")},1e3)},onThemeSelectChange=()=>{pageBody.classList.add("body--transition"),setTimeout(()=>{pageBody.classList.remove("body--transition")},1e3),pageBody.classList.toggle("body--dark")},onResetButtonClick=t=>{t.preventDefault(),localStorage.clear(),todoList.innerHTML=DEFAULT_TODO_LIST};todoListContent=localStorage.getItem("todoList"),todoListContent?(console.log(todoListContent),todoList.innerHTML=todoListContent):console.log("todo-list is clear"),todoList.addEventListener("click",onTaskHandlerClick),newTaskForm.addEventListener("submit",onNewTaskFormSubmit),newTaskAddButton.addEventListener("click",onNewTaskAddButtonClick),themeSelect.addEventListener("change",onThemeSelectChange),resetButton.addEventListener("click",onResetButtonClick);